name: Node.js CI/CD avec Docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup-build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 123
          MYSQL_DATABASE: mydatabase
        ports:
          - 3308:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # - name: Set up Docker Compose
    #   run: docker-compose -f docker-compose.yml up --build -d

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install backend dependencies
      run: |
        cd backend
        npm install

    - name: Run backend tests
      run: |
        cd backend
        npm test

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Run frontend tests
      run: |
        cd frontend
        npm test



    # Snyk for security dependencies check
    - name: Security dependencies check
      run: |
        npm install -g snyk
        snyk test --all-projects --fail-on-warnings
      env:
        SNYK_API_TOKEN: ${{ secrets.SNYK_TOKEN }}

    # Codacy for quality code check
    - name: Quality code check with Codacy
      uses: codacy/codacy-analysis-cli-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        upload: true

    # SÃ©curity of images Docker with Trivy 
    - name: Docker image security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'gestion_cadeau-frontend-1'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
    - name: Docker image security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'gestion_cadeau-backend-1'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'

    # Automated tests 
    - name: Automated tests
      run: npm run test 

    - name: Shutdown Docker Compose
      run: docker-compose down
